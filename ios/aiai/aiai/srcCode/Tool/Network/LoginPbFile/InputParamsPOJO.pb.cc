// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InputParamsPOJO.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InputParamsPOJO.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace mm {
namespace pb {
namespace po {

namespace {

const ::google::protobuf::Descriptor* InputParamsPOJO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputParamsPOJO_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_InputParamsPOJO_2eproto() {
  protobuf_AddDesc_InputParamsPOJO_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "InputParamsPOJO.proto");
  GOOGLE_CHECK(file != NULL);
  InputParamsPOJO_descriptor_ = file->message_type(0);
  static const int InputParamsPOJO_offsets_[32] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, faceurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, mobile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, formal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, iphonetoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, facevedio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, machineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, newpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, oldpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, type1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, type2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, thirdwid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, thirdpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, isshare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, asup_),
  };
  InputParamsPOJO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InputParamsPOJO_descriptor_,
      InputParamsPOJO::default_instance_,
      InputParamsPOJO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParamsPOJO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InputParamsPOJO));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_InputParamsPOJO_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InputParamsPOJO_descriptor_, &InputParamsPOJO::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_InputParamsPOJO_2eproto() {
  delete InputParamsPOJO::default_instance_;
  delete InputParamsPOJO_reflection_;
}

void protobuf_AddDesc_InputParamsPOJO_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025InputParamsPOJO.proto\022\014com.mm.pb.po\"\250\004"
    "\n\017InputParamsPOJO\022\020\n\010username\030\001 \001(\t\022\013\n\003u"
    "id\030\002 \001(\005\022\020\n\010nickname\030\003 \001(\t\022\017\n\007version\030\004 "
    "\001(\t\022\020\n\010password\030\005 \001(\t\022\016\n\006source\030\006 \001(\t\022\r\n"
    "\005email\030\007 \001(\t\022\020\n\010birthday\030\010 \001(\003\022\017\n\007faceUr"
    "l\030\t \001(\t\022\017\n\007channel\030\n \001(\t\022\016\n\006gender\030\013 \001(\005"
    "\022\014\n\004info\030\014 \001(\t\022\016\n\006mobile\030\r \001(\t\022\016\n\006formal"
    "\030\016 \001(\005\022\023\n\013iphoneToken\030\017 \001(\t\022\014\n\004city\030\020 \001("
    "\t\022\021\n\tfaceVedio\030\021 \001(\t\022\021\n\tmachineId\030\022 \001(\t\022"
    "\013\n\003msg\030\023 \001(\t\022\023\n\013messageType\030\024 \001(\005\022\017\n\007mes"
    "sage\030\025 \001(\t\022\016\n\006radius\030\026 \001(\005\022\021\n\tlongitude\030"
    "\027 \001(\002\022\020\n\010latitude\030\030 \001(\002\022\016\n\006newPwd\030\031 \001(\t\022"
    "\016\n\006oldPwd\030\032 \001(\t\022\r\n\005type1\030\033 \001(\005\022\r\n\005type2\030"
    "\034 \001(\005\022\020\n\010thirdWid\030\035 \001(\005\022\020\n\010thirdPid\030\036 \001("
    "\t\022\017\n\007isShare\030\037 \001(\005\022\014\n\004asUp\030  \001(\005B\021B\017Inpu"
    "tParamsPOJO", 611);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InputParamsPOJO.proto", &protobuf_RegisterTypes);
  InputParamsPOJO::default_instance_ = new InputParamsPOJO();
  InputParamsPOJO::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_InputParamsPOJO_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_InputParamsPOJO_2eproto {
  StaticDescriptorInitializer_InputParamsPOJO_2eproto() {
    protobuf_AddDesc_InputParamsPOJO_2eproto();
  }
} static_descriptor_initializer_InputParamsPOJO_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int InputParamsPOJO::kUsernameFieldNumber;
const int InputParamsPOJO::kUidFieldNumber;
const int InputParamsPOJO::kNicknameFieldNumber;
const int InputParamsPOJO::kVersionFieldNumber;
const int InputParamsPOJO::kPasswordFieldNumber;
const int InputParamsPOJO::kSourceFieldNumber;
const int InputParamsPOJO::kEmailFieldNumber;
const int InputParamsPOJO::kBirthdayFieldNumber;
const int InputParamsPOJO::kFaceUrlFieldNumber;
const int InputParamsPOJO::kChannelFieldNumber;
const int InputParamsPOJO::kGenderFieldNumber;
const int InputParamsPOJO::kInfoFieldNumber;
const int InputParamsPOJO::kMobileFieldNumber;
const int InputParamsPOJO::kFormalFieldNumber;
const int InputParamsPOJO::kIphoneTokenFieldNumber;
const int InputParamsPOJO::kCityFieldNumber;
const int InputParamsPOJO::kFaceVedioFieldNumber;
const int InputParamsPOJO::kMachineIdFieldNumber;
const int InputParamsPOJO::kMsgFieldNumber;
const int InputParamsPOJO::kMessageTypeFieldNumber;
const int InputParamsPOJO::kMessageFieldNumber;
const int InputParamsPOJO::kRadiusFieldNumber;
const int InputParamsPOJO::kLongitudeFieldNumber;
const int InputParamsPOJO::kLatitudeFieldNumber;
const int InputParamsPOJO::kNewPwdFieldNumber;
const int InputParamsPOJO::kOldPwdFieldNumber;
const int InputParamsPOJO::kType1FieldNumber;
const int InputParamsPOJO::kType2FieldNumber;
const int InputParamsPOJO::kThirdWidFieldNumber;
const int InputParamsPOJO::kThirdPidFieldNumber;
const int InputParamsPOJO::kIsShareFieldNumber;
const int InputParamsPOJO::kAsUpFieldNumber;
#endif  // !_MSC_VER

InputParamsPOJO::InputParamsPOJO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InputParamsPOJO::InitAsDefaultInstance() {
}

InputParamsPOJO::InputParamsPOJO(const InputParamsPOJO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InputParamsPOJO::SharedCtor() {
  _cached_size_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  uid_ = 0;
  nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  birthday_ = GOOGLE_LONGLONG(0);
  faceurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gender_ = 0;
  info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  formal_ = 0;
  iphonetoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  facevedio_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  machineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  messagetype_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  radius_ = 0;
  longitude_ = 0;
  latitude_ = 0;
  newpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oldpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type1_ = 0;
  type2_ = 0;
  thirdwid_ = 0;
  thirdpid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isshare_ = 0;
  asup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputParamsPOJO::~InputParamsPOJO() {
  SharedDtor();
}

void InputParamsPOJO::SharedDtor() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    delete source_;
  }
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (faceurl_ != &::google::protobuf::internal::kEmptyString) {
    delete faceurl_;
  }
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    delete info_;
  }
  if (mobile_ != &::google::protobuf::internal::kEmptyString) {
    delete mobile_;
  }
  if (iphonetoken_ != &::google::protobuf::internal::kEmptyString) {
    delete iphonetoken_;
  }
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    delete city_;
  }
  if (facevedio_ != &::google::protobuf::internal::kEmptyString) {
    delete facevedio_;
  }
  if (machineid_ != &::google::protobuf::internal::kEmptyString) {
    delete machineid_;
  }
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (newpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete newpwd_;
  }
  if (oldpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete oldpwd_;
  }
  if (thirdpid_ != &::google::protobuf::internal::kEmptyString) {
    delete thirdpid_;
  }
  if (this != default_instance_) {
  }
}

void InputParamsPOJO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputParamsPOJO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputParamsPOJO_descriptor_;
}

const InputParamsPOJO& InputParamsPOJO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_InputParamsPOJO_2eproto();
  return *default_instance_;
}

InputParamsPOJO* InputParamsPOJO::default_instance_ = NULL;

InputParamsPOJO* InputParamsPOJO::New() const {
  return new InputParamsPOJO;
}

void InputParamsPOJO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    uid_ = 0;
    if (has_nickname()) {
      if (nickname_ != &::google::protobuf::internal::kEmptyString) {
        nickname_->clear();
      }
    }
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::kEmptyString) {
        version_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::kEmptyString) {
        password_->clear();
      }
    }
    if (has_source()) {
      if (source_ != &::google::protobuf::internal::kEmptyString) {
        source_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::kEmptyString) {
        email_->clear();
      }
    }
    birthday_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_faceurl()) {
      if (faceurl_ != &::google::protobuf::internal::kEmptyString) {
        faceurl_->clear();
      }
    }
    if (has_channel()) {
      if (channel_ != &::google::protobuf::internal::kEmptyString) {
        channel_->clear();
      }
    }
    gender_ = 0;
    if (has_info()) {
      if (info_ != &::google::protobuf::internal::kEmptyString) {
        info_->clear();
      }
    }
    if (has_mobile()) {
      if (mobile_ != &::google::protobuf::internal::kEmptyString) {
        mobile_->clear();
      }
    }
    formal_ = 0;
    if (has_iphonetoken()) {
      if (iphonetoken_ != &::google::protobuf::internal::kEmptyString) {
        iphonetoken_->clear();
      }
    }
    if (has_city()) {
      if (city_ != &::google::protobuf::internal::kEmptyString) {
        city_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_facevedio()) {
      if (facevedio_ != &::google::protobuf::internal::kEmptyString) {
        facevedio_->clear();
      }
    }
    if (has_machineid()) {
      if (machineid_ != &::google::protobuf::internal::kEmptyString) {
        machineid_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::kEmptyString) {
        msg_->clear();
      }
    }
    messagetype_ = 0;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    radius_ = 0;
    longitude_ = 0;
    latitude_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_newpwd()) {
      if (newpwd_ != &::google::protobuf::internal::kEmptyString) {
        newpwd_->clear();
      }
    }
    if (has_oldpwd()) {
      if (oldpwd_ != &::google::protobuf::internal::kEmptyString) {
        oldpwd_->clear();
      }
    }
    type1_ = 0;
    type2_ = 0;
    thirdwid_ = 0;
    if (has_thirdpid()) {
      if (thirdpid_ != &::google::protobuf::internal::kEmptyString) {
        thirdpid_->clear();
      }
    }
    isshare_ = 0;
    asup_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InputParamsPOJO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_nickname;
        break;
      }

      // optional string nickname = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_version;
        break;
      }

      // optional string version = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_password;
        break;
      }

      // optional string password = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_source;
        break;
      }

      // optional string source = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_email;
        break;
      }

      // optional string email = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_birthday;
        break;
      }

      // optional int64 birthday = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_birthday:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &birthday_)));
          set_has_birthday();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_faceUrl;
        break;
      }

      // optional string faceUrl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_faceUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_faceurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->faceurl().data(), this->faceurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_channel;
        break;
      }

      // optional string channel = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_gender;
        break;
      }

      // optional int32 gender = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));
          set_has_gender();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_info;
        break;
      }

      // optional string info = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_mobile;
        break;
      }

      // optional string mobile = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mobile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_formal;
        break;
      }

      // optional int32 formal = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_formal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &formal_)));
          set_has_formal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_iphoneToken;
        break;
      }

      // optional string iphoneToken = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iphoneToken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iphonetoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iphonetoken().data(), this->iphonetoken().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_city;
        break;
      }

      // optional string city = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_faceVedio;
        break;
      }

      // optional string faceVedio = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_faceVedio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_facevedio()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->facevedio().data(), this->facevedio().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_machineId;
        break;
      }

      // optional string machineId = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_machineId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machineid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->machineid().data(), this->machineid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_msg;
        break;
      }

      // optional string msg = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_messageType;
        break;
      }

      // optional int32 messageType = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_messageType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagetype_)));
          set_has_messagetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_message;
        break;
      }

      // optional string message = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_radius;
        break;
      }

      // optional int32 radius = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &radius_)));
          set_has_radius();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(189)) goto parse_longitude;
        break;
      }

      // optional float longitude = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(197)) goto parse_latitude;
        break;
      }

      // optional float latitude = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_newPwd;
        break;
      }

      // optional string newPwd = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_newPwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->newpwd().data(), this->newpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_oldPwd;
        break;
      }

      // optional string oldPwd = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_oldPwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oldpwd().data(), this->oldpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_type1;
        break;
      }

      // optional int32 type1 = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type1_)));
          set_has_type1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_type2;
        break;
      }

      // optional int32 type2 = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type2_)));
          set_has_type2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_thirdWid;
        break;
      }

      // optional int32 thirdWid = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_thirdWid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &thirdwid_)));
          set_has_thirdwid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_thirdPid;
        break;
      }

      // optional string thirdPid = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirdPid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thirdpid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->thirdpid().data(), this->thirdpid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_isShare;
        break;
      }

      // optional int32 isShare = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isShare:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isshare_)));
          set_has_isshare();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_asUp;
        break;
      }

      // optional int32 asUp = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_asUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asup_)));
          set_has_asup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InputParamsPOJO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->username(), output);
  }

  // optional int32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // optional string nickname = 3;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->nickname(), output);
  }

  // optional string version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->version(), output);
  }

  // optional string password = 5;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->password(), output);
  }

  // optional string source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->source(), output);
  }

  // optional string email = 7;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->email(), output);
  }

  // optional int64 birthday = 8;
  if (has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->birthday(), output);
  }

  // optional string faceUrl = 9;
  if (has_faceurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->faceurl().data(), this->faceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->faceurl(), output);
  }

  // optional string channel = 10;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->channel(), output);
  }

  // optional int32 gender = 11;
  if (has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->gender(), output);
  }

  // optional string info = 12;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->info(), output);
  }

  // optional string mobile = 13;
  if (has_mobile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->mobile(), output);
  }

  // optional int32 formal = 14;
  if (has_formal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->formal(), output);
  }

  // optional string iphoneToken = 15;
  if (has_iphonetoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iphonetoken().data(), this->iphonetoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->iphonetoken(), output);
  }

  // optional string city = 16;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->city(), output);
  }

  // optional string faceVedio = 17;
  if (has_facevedio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->facevedio().data(), this->facevedio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->facevedio(), output);
  }

  // optional string machineId = 18;
  if (has_machineid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->machineid().data(), this->machineid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->machineid(), output);
  }

  // optional string msg = 19;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->msg(), output);
  }

  // optional int32 messageType = 20;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->messagetype(), output);
  }

  // optional string message = 21;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->message(), output);
  }

  // optional int32 radius = 22;
  if (has_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->radius(), output);
  }

  // optional float longitude = 23;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->longitude(), output);
  }

  // optional float latitude = 24;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->latitude(), output);
  }

  // optional string newPwd = 25;
  if (has_newpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->newpwd().data(), this->newpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->newpwd(), output);
  }

  // optional string oldPwd = 26;
  if (has_oldpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldpwd().data(), this->oldpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->oldpwd(), output);
  }

  // optional int32 type1 = 27;
  if (has_type1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->type1(), output);
  }

  // optional int32 type2 = 28;
  if (has_type2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->type2(), output);
  }

  // optional int32 thirdWid = 29;
  if (has_thirdwid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->thirdwid(), output);
  }

  // optional string thirdPid = 30;
  if (has_thirdpid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpid().data(), this->thirdpid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->thirdpid(), output);
  }

  // optional int32 isShare = 31;
  if (has_isshare()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->isshare(), output);
  }

  // optional int32 asUp = 32;
  if (has_asup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->asup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InputParamsPOJO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional int32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // optional string nickname = 3;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional string version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // optional string password = 5;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->password(), target);
  }

  // optional string source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->source(), target);
  }

  // optional string email = 7;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->email(), target);
  }

  // optional int64 birthday = 8;
  if (has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->birthday(), target);
  }

  // optional string faceUrl = 9;
  if (has_faceurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->faceurl().data(), this->faceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->faceurl(), target);
  }

  // optional string channel = 10;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->channel(), target);
  }

  // optional int32 gender = 11;
  if (has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->gender(), target);
  }

  // optional string info = 12;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->info(), target);
  }

  // optional string mobile = 13;
  if (has_mobile()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->mobile(), target);
  }

  // optional int32 formal = 14;
  if (has_formal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->formal(), target);
  }

  // optional string iphoneToken = 15;
  if (has_iphonetoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iphonetoken().data(), this->iphonetoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->iphonetoken(), target);
  }

  // optional string city = 16;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->city(), target);
  }

  // optional string faceVedio = 17;
  if (has_facevedio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->facevedio().data(), this->facevedio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->facevedio(), target);
  }

  // optional string machineId = 18;
  if (has_machineid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->machineid().data(), this->machineid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->machineid(), target);
  }

  // optional string msg = 19;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->msg(), target);
  }

  // optional int32 messageType = 20;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->messagetype(), target);
  }

  // optional string message = 21;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->message(), target);
  }

  // optional int32 radius = 22;
  if (has_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->radius(), target);
  }

  // optional float longitude = 23;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->longitude(), target);
  }

  // optional float latitude = 24;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->latitude(), target);
  }

  // optional string newPwd = 25;
  if (has_newpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->newpwd().data(), this->newpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->newpwd(), target);
  }

  // optional string oldPwd = 26;
  if (has_oldpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldpwd().data(), this->oldpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->oldpwd(), target);
  }

  // optional int32 type1 = 27;
  if (has_type1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->type1(), target);
  }

  // optional int32 type2 = 28;
  if (has_type2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->type2(), target);
  }

  // optional int32 thirdWid = 29;
  if (has_thirdwid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->thirdwid(), target);
  }

  // optional string thirdPid = 30;
  if (has_thirdpid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpid().data(), this->thirdpid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->thirdpid(), target);
  }

  // optional int32 isShare = 31;
  if (has_isshare()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->isshare(), target);
  }

  // optional int32 asUp = 32;
  if (has_asup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->asup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InputParamsPOJO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string username = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional int32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional string nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string version = 4;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string password = 5;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string source = 6;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

    // optional string email = 7;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional int64 birthday = 8;
    if (has_birthday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->birthday());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string faceUrl = 9;
    if (has_faceurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->faceurl());
    }

    // optional string channel = 10;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional int32 gender = 11;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gender());
    }

    // optional string info = 12;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->info());
    }

    // optional string mobile = 13;
    if (has_mobile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mobile());
    }

    // optional int32 formal = 14;
    if (has_formal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->formal());
    }

    // optional string iphoneToken = 15;
    if (has_iphonetoken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iphonetoken());
    }

    // optional string city = 16;
    if (has_city()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string faceVedio = 17;
    if (has_facevedio()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->facevedio());
    }

    // optional string machineId = 18;
    if (has_machineid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machineid());
    }

    // optional string msg = 19;
    if (has_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 messageType = 20;
    if (has_messagetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->messagetype());
    }

    // optional string message = 21;
    if (has_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional int32 radius = 22;
    if (has_radius()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->radius());
    }

    // optional float longitude = 23;
    if (has_longitude()) {
      total_size += 2 + 4;
    }

    // optional float latitude = 24;
    if (has_latitude()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string newPwd = 25;
    if (has_newpwd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->newpwd());
    }

    // optional string oldPwd = 26;
    if (has_oldpwd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldpwd());
    }

    // optional int32 type1 = 27;
    if (has_type1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type1());
    }

    // optional int32 type2 = 28;
    if (has_type2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type2());
    }

    // optional int32 thirdWid = 29;
    if (has_thirdwid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->thirdwid());
    }

    // optional string thirdPid = 30;
    if (has_thirdpid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thirdpid());
    }

    // optional int32 isShare = 31;
    if (has_isshare()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isshare());
    }

    // optional int32 asUp = 32;
    if (has_asup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->asup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputParamsPOJO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InputParamsPOJO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InputParamsPOJO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InputParamsPOJO::MergeFrom(const InputParamsPOJO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_nickname()) {
      set_nickname(from.nickname());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_birthday()) {
      set_birthday(from.birthday());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_faceurl()) {
      set_faceurl(from.faceurl());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_gender()) {
      set_gender(from.gender());
    }
    if (from.has_info()) {
      set_info(from.info());
    }
    if (from.has_mobile()) {
      set_mobile(from.mobile());
    }
    if (from.has_formal()) {
      set_formal(from.formal());
    }
    if (from.has_iphonetoken()) {
      set_iphonetoken(from.iphonetoken());
    }
    if (from.has_city()) {
      set_city(from.city());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_facevedio()) {
      set_facevedio(from.facevedio());
    }
    if (from.has_machineid()) {
      set_machineid(from.machineid());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_radius()) {
      set_radius(from.radius());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_newpwd()) {
      set_newpwd(from.newpwd());
    }
    if (from.has_oldpwd()) {
      set_oldpwd(from.oldpwd());
    }
    if (from.has_type1()) {
      set_type1(from.type1());
    }
    if (from.has_type2()) {
      set_type2(from.type2());
    }
    if (from.has_thirdwid()) {
      set_thirdwid(from.thirdwid());
    }
    if (from.has_thirdpid()) {
      set_thirdpid(from.thirdpid());
    }
    if (from.has_isshare()) {
      set_isshare(from.isshare());
    }
    if (from.has_asup()) {
      set_asup(from.asup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InputParamsPOJO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputParamsPOJO::CopyFrom(const InputParamsPOJO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputParamsPOJO::IsInitialized() const {

  return true;
}

void InputParamsPOJO::Swap(InputParamsPOJO* other) {
  if (other != this) {
    std::swap(username_, other->username_);
    std::swap(uid_, other->uid_);
    std::swap(nickname_, other->nickname_);
    std::swap(version_, other->version_);
    std::swap(password_, other->password_);
    std::swap(source_, other->source_);
    std::swap(email_, other->email_);
    std::swap(birthday_, other->birthday_);
    std::swap(faceurl_, other->faceurl_);
    std::swap(channel_, other->channel_);
    std::swap(gender_, other->gender_);
    std::swap(info_, other->info_);
    std::swap(mobile_, other->mobile_);
    std::swap(formal_, other->formal_);
    std::swap(iphonetoken_, other->iphonetoken_);
    std::swap(city_, other->city_);
    std::swap(facevedio_, other->facevedio_);
    std::swap(machineid_, other->machineid_);
    std::swap(msg_, other->msg_);
    std::swap(messagetype_, other->messagetype_);
    std::swap(message_, other->message_);
    std::swap(radius_, other->radius_);
    std::swap(longitude_, other->longitude_);
    std::swap(latitude_, other->latitude_);
    std::swap(newpwd_, other->newpwd_);
    std::swap(oldpwd_, other->oldpwd_);
    std::swap(type1_, other->type1_);
    std::swap(type2_, other->type2_);
    std::swap(thirdwid_, other->thirdwid_);
    std::swap(thirdpid_, other->thirdpid_);
    std::swap(isshare_, other->isshare_);
    std::swap(asup_, other->asup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InputParamsPOJO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputParamsPOJO_descriptor_;
  metadata.reflection = InputParamsPOJO_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace po
}  // namespace pb
}  // namespace mm
}  // namespace com

// @@protoc_insertion_point(global_scope)
