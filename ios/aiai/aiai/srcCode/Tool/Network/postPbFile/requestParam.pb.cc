// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: requestParam.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "requestParam.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

namespace {

const ::google::protobuf::Descriptor* RequestParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestParam_Param_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestParam_Param_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_requestParam_2eproto() {
  protobuf_AddDesc_requestParam_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "requestParam.proto");
  GOOGLE_CHECK(file != NULL);
  RequestParam_descriptor_ = file->message_type(0);
  static const int RequestParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam, queuename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam, methodname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam, param_),
  };
  RequestParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestParam_descriptor_,
      RequestParam::default_instance_,
      RequestParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestParam));
  RequestParam_Param_descriptor_ = RequestParam_descriptor_->nested_type(0);
  static const int RequestParam_Param_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam_Param, paramkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam_Param, paramvalue_),
  };
  RequestParam_Param_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestParam_Param_descriptor_,
      RequestParam_Param::default_instance_,
      RequestParam_Param_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam_Param, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestParam_Param, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestParam_Param));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_requestParam_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestParam_descriptor_, &RequestParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestParam_Param_descriptor_, &RequestParam_Param::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_requestParam_2eproto() {
  delete RequestParam::default_instance_;
  delete RequestParam_reflection_;
  delete RequestParam_Param::default_instance_;
  delete RequestParam_Param_reflection_;
}

void protobuf_AddDesc_requestParam_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022requestParam.proto\022\010tutorial\"\221\001\n\014Reque"
    "stParam\022\021\n\tqueueName\030\001 \002(\t\022\022\n\nmethodName"
    "\030\002 \002(\t\022+\n\005param\030\003 \003(\0132\034.tutorial.Request"
    "Param.Param\032-\n\005Param\022\020\n\010paramKey\030\001 \002(\t\022\022"
    "\n\nparamValue\030\002 \002(\tB!\n\024com.cloud.controll"
    "erB\tPBRequest", 213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "requestParam.proto", &protobuf_RegisterTypes);
  RequestParam::default_instance_ = new RequestParam();
  RequestParam_Param::default_instance_ = new RequestParam_Param();
  RequestParam::default_instance_->InitAsDefaultInstance();
  RequestParam_Param::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_requestParam_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_requestParam_2eproto {
  StaticDescriptorInitializer_requestParam_2eproto() {
    protobuf_AddDesc_requestParam_2eproto();
  }
} static_descriptor_initializer_requestParam_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RequestParam_Param::kParamKeyFieldNumber;
const int RequestParam_Param::kParamValueFieldNumber;
#endif  // !_MSC_VER

RequestParam_Param::RequestParam_Param()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestParam_Param::InitAsDefaultInstance() {
}

RequestParam_Param::RequestParam_Param(const RequestParam_Param& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestParam_Param::SharedCtor() {
  _cached_size_ = 0;
  paramkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  paramvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestParam_Param::~RequestParam_Param() {
  SharedDtor();
}

void RequestParam_Param::SharedDtor() {
  if (paramkey_ != &::google::protobuf::internal::kEmptyString) {
    delete paramkey_;
  }
  if (paramvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete paramvalue_;
  }
  if (this != default_instance_) {
  }
}

void RequestParam_Param::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestParam_Param::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestParam_Param_descriptor_;
}

const RequestParam_Param& RequestParam_Param::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_requestParam_2eproto();
  return *default_instance_;
}

RequestParam_Param* RequestParam_Param::default_instance_ = NULL;

RequestParam_Param* RequestParam_Param::New() const {
  return new RequestParam_Param;
}

void RequestParam_Param::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_paramkey()) {
      if (paramkey_ != &::google::protobuf::internal::kEmptyString) {
        paramkey_->clear();
      }
    }
    if (has_paramvalue()) {
      if (paramvalue_ != &::google::protobuf::internal::kEmptyString) {
        paramvalue_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestParam_Param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string paramKey = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paramkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->paramkey().data(), this->paramkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_paramValue;
        break;
      }

      // required string paramValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_paramValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paramvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->paramvalue().data(), this->paramvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestParam_Param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string paramKey = 1;
  if (has_paramkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramkey().data(), this->paramkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->paramkey(), output);
  }

  // required string paramValue = 2;
  if (has_paramvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramvalue().data(), this->paramvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->paramvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestParam_Param::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string paramKey = 1;
  if (has_paramkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramkey().data(), this->paramkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->paramkey(), target);
  }

  // required string paramValue = 2;
  if (has_paramvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramvalue().data(), this->paramvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->paramvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestParam_Param::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string paramKey = 1;
    if (has_paramkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->paramkey());
    }

    // required string paramValue = 2;
    if (has_paramvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->paramvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestParam_Param::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestParam_Param* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestParam_Param*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestParam_Param::MergeFrom(const RequestParam_Param& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_paramkey()) {
      set_paramkey(from.paramkey());
    }
    if (from.has_paramvalue()) {
      set_paramvalue(from.paramvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestParam_Param::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestParam_Param::CopyFrom(const RequestParam_Param& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestParam_Param::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestParam_Param::Swap(RequestParam_Param* other) {
  if (other != this) {
    std::swap(paramkey_, other->paramkey_);
    std::swap(paramvalue_, other->paramvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestParam_Param::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestParam_Param_descriptor_;
  metadata.reflection = RequestParam_Param_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int RequestParam::kQueueNameFieldNumber;
const int RequestParam::kMethodNameFieldNumber;
const int RequestParam::kParamFieldNumber;
#endif  // !_MSC_VER

RequestParam::RequestParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestParam::InitAsDefaultInstance() {
}

RequestParam::RequestParam(const RequestParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestParam::SharedCtor() {
  _cached_size_ = 0;
  queuename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  methodname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestParam::~RequestParam() {
  SharedDtor();
}

void RequestParam::SharedDtor() {
  if (queuename_ != &::google::protobuf::internal::kEmptyString) {
    delete queuename_;
  }
  if (methodname_ != &::google::protobuf::internal::kEmptyString) {
    delete methodname_;
  }
  if (this != default_instance_) {
  }
}

void RequestParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestParam_descriptor_;
}

const RequestParam& RequestParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_requestParam_2eproto();
  return *default_instance_;
}

RequestParam* RequestParam::default_instance_ = NULL;

RequestParam* RequestParam::New() const {
  return new RequestParam;
}

void RequestParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_queuename()) {
      if (queuename_ != &::google::protobuf::internal::kEmptyString) {
        queuename_->clear();
      }
    }
    if (has_methodname()) {
      if (methodname_ != &::google::protobuf::internal::kEmptyString) {
        methodname_->clear();
      }
    }
  }
  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string queueName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_queuename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->queuename().data(), this->queuename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_methodName;
        break;
      }

      // required string methodName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_methodName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_methodname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->methodname().data(), this->methodname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_param;
        break;
      }

      // repeated .tutorial.RequestParam.Param param = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_param;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string queueName = 1;
  if (has_queuename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->queuename().data(), this->queuename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->queuename(), output);
  }

  // required string methodName = 2;
  if (has_methodname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->methodname().data(), this->methodname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->methodname(), output);
  }

  // repeated .tutorial.RequestParam.Param param = 3;
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->param(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string queueName = 1;
  if (has_queuename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->queuename().data(), this->queuename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->queuename(), target);
  }

  // required string methodName = 2;
  if (has_methodname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->methodname().data(), this->methodname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->methodname(), target);
  }

  // repeated .tutorial.RequestParam.Param param = 3;
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->param(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string queueName = 1;
    if (has_queuename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->queuename());
    }

    // required string methodName = 2;
    if (has_methodname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->methodname());
    }

  }
  // repeated .tutorial.RequestParam.Param param = 3;
  total_size += 1 * this->param_size();
  for (int i = 0; i < this->param_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestParam::MergeFrom(const RequestParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_.MergeFrom(from.param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queuename()) {
      set_queuename(from.queuename());
    }
    if (from.has_methodname()) {
      set_methodname(from.methodname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestParam::CopyFrom(const RequestParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < param_size(); i++) {
    if (!this->param(i).IsInitialized()) return false;
  }
  return true;
}

void RequestParam::Swap(RequestParam* other) {
  if (other != this) {
    std::swap(queuename_, other->queuename_);
    std::swap(methodname_, other->methodname_);
    param_.Swap(&other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestParam_descriptor_;
  metadata.reflection = RequestParam_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
