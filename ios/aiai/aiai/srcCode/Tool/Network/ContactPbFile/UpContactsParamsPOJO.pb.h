// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UpContactsParamsPOJO.proto

#ifndef PROTOBUF_UpContactsParamsPOJO_2eproto__INCLUDED
#define PROTOBUF_UpContactsParamsPOJO_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace mm {
namespace pb {
namespace po {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UpContactsParamsPOJO_2eproto();
void protobuf_AssignDesc_UpContactsParamsPOJO_2eproto();
void protobuf_ShutdownFile_UpContactsParamsPOJO_2eproto();

class UpContactsParamsPOJO;
class UpContacts;
class Phone;

// ===================================================================

class UpContactsParamsPOJO : public ::google::protobuf::Message {
 public:
  UpContactsParamsPOJO();
  virtual ~UpContactsParamsPOJO();

  UpContactsParamsPOJO(const UpContactsParamsPOJO& from);

  inline UpContactsParamsPOJO& operator=(const UpContactsParamsPOJO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpContactsParamsPOJO& default_instance();

  void Swap(UpContactsParamsPOJO* other);

  // implements Message ----------------------------------------------

  UpContactsParamsPOJO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpContactsParamsPOJO& from);
  void MergeFrom(const UpContactsParamsPOJO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // optional int32 resultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::int32 resultcode() const;
  inline void set_resultcode(::google::protobuf::int32 value);

  // repeated .com.mm.pb.po.UpContacts phones = 3;
  inline int phones_size() const;
  inline void clear_phones();
  static const int kPhonesFieldNumber = 3;
  inline const ::com::mm::pb::po::UpContacts& phones(int index) const;
  inline ::com::mm::pb::po::UpContacts* mutable_phones(int index);
  inline ::com::mm::pb::po::UpContacts* add_phones();
  inline const ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::UpContacts >&
      phones() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::UpContacts >*
      mutable_phones();

  // optional int32 version = 4;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.mm.pb.po.UpContactsParamsPOJO)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_resultcode();
  inline void clear_has_resultcode();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::UpContacts > phones_;
  ::google::protobuf::int32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_UpContactsParamsPOJO_2eproto();
  friend void protobuf_AssignDesc_UpContactsParamsPOJO_2eproto();
  friend void protobuf_ShutdownFile_UpContactsParamsPOJO_2eproto();

  void InitAsDefaultInstance();
  static UpContactsParamsPOJO* default_instance_;
};
// -------------------------------------------------------------------

class UpContacts : public ::google::protobuf::Message {
 public:
  UpContacts();
  virtual ~UpContacts();

  UpContacts(const UpContacts& from);

  inline UpContacts& operator=(const UpContacts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpContacts& default_instance();

  void Swap(UpContacts* other);

  // implements Message ----------------------------------------------

  UpContacts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpContacts& from);
  void MergeFrom(const UpContacts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string n = 2;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 2;
  inline const ::std::string& n() const;
  inline void set_n(const ::std::string& value);
  inline void set_n(const char* value);
  inline void set_n(const char* value, size_t size);
  inline ::std::string* mutable_n();
  inline ::std::string* release_n();
  inline void set_allocated_n(::std::string* n);

  // optional int32 t = 3;
  inline bool has_t() const;
  inline void clear_t();
  static const int kTFieldNumber = 3;
  inline ::google::protobuf::int32 t() const;
  inline void set_t(::google::protobuf::int32 value);

  // repeated .com.mm.pb.po.Phone p = 4;
  inline int p_size() const;
  inline void clear_p();
  static const int kPFieldNumber = 4;
  inline const ::com::mm::pb::po::Phone& p(int index) const;
  inline ::com::mm::pb::po::Phone* mutable_p(int index);
  inline ::com::mm::pb::po::Phone* add_p();
  inline const ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::Phone >&
      p() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::Phone >*
      mutable_p();

  // @@protoc_insertion_point(class_scope:com.mm.pb.po.UpContacts)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_t();
  inline void clear_has_t();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* n_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 t_;
  ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::Phone > p_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_UpContactsParamsPOJO_2eproto();
  friend void protobuf_AssignDesc_UpContactsParamsPOJO_2eproto();
  friend void protobuf_ShutdownFile_UpContactsParamsPOJO_2eproto();

  void InitAsDefaultInstance();
  static UpContacts* default_instance_;
};
// -------------------------------------------------------------------

class Phone : public ::google::protobuf::Message {
 public:
  Phone();
  virtual ~Phone();

  Phone(const Phone& from);

  inline Phone& operator=(const Phone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Phone& default_instance();

  void Swap(Phone* other);

  // implements Message ----------------------------------------------

  Phone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Phone& from);
  void MergeFrom(const Phone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pn = 1;
  inline bool has_pn() const;
  inline void clear_pn();
  static const int kPnFieldNumber = 1;
  inline ::google::protobuf::int64 pn() const;
  inline void set_pn(::google::protobuf::int64 value);

  // optional int32 pt = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPtFieldNumber = 2;
  inline ::google::protobuf::int32 pt() const;
  inline void set_pt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.mm.pb.po.Phone)
 private:
  inline void set_has_pn();
  inline void clear_has_pn();
  inline void set_has_pt();
  inline void clear_has_pt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pn_;
  ::google::protobuf::int32 pt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_UpContactsParamsPOJO_2eproto();
  friend void protobuf_AssignDesc_UpContactsParamsPOJO_2eproto();
  friend void protobuf_ShutdownFile_UpContactsParamsPOJO_2eproto();

  void InitAsDefaultInstance();
  static Phone* default_instance_;
};
// ===================================================================


// ===================================================================

// UpContactsParamsPOJO

// optional int32 uid = 1;
inline bool UpContactsParamsPOJO::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpContactsParamsPOJO::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpContactsParamsPOJO::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpContactsParamsPOJO::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 UpContactsParamsPOJO::uid() const {
  return uid_;
}
inline void UpContactsParamsPOJO::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
}

// optional int32 resultCode = 2;
inline bool UpContactsParamsPOJO::has_resultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpContactsParamsPOJO::set_has_resultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpContactsParamsPOJO::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpContactsParamsPOJO::clear_resultcode() {
  resultcode_ = 0;
  clear_has_resultcode();
}
inline ::google::protobuf::int32 UpContactsParamsPOJO::resultcode() const {
  return resultcode_;
}
inline void UpContactsParamsPOJO::set_resultcode(::google::protobuf::int32 value) {
  set_has_resultcode();
  resultcode_ = value;
}

// repeated .com.mm.pb.po.UpContacts phones = 3;
inline int UpContactsParamsPOJO::phones_size() const {
  return phones_.size();
}
inline void UpContactsParamsPOJO::clear_phones() {
  phones_.Clear();
}
inline const ::com::mm::pb::po::UpContacts& UpContactsParamsPOJO::phones(int index) const {
  return phones_.Get(index);
}
inline ::com::mm::pb::po::UpContacts* UpContactsParamsPOJO::mutable_phones(int index) {
  return phones_.Mutable(index);
}
inline ::com::mm::pb::po::UpContacts* UpContactsParamsPOJO::add_phones() {
  return phones_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::UpContacts >&
UpContactsParamsPOJO::phones() const {
  return phones_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::UpContacts >*
UpContactsParamsPOJO::mutable_phones() {
  return &phones_;
}

// optional int32 version = 4;
inline bool UpContactsParamsPOJO::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpContactsParamsPOJO::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpContactsParamsPOJO::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpContactsParamsPOJO::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 UpContactsParamsPOJO::version() const {
  return version_;
}
inline void UpContactsParamsPOJO::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// UpContacts

// optional int32 id = 1;
inline bool UpContacts::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpContacts::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpContacts::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpContacts::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UpContacts::id() const {
  return id_;
}
inline void UpContacts::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string n = 2;
inline bool UpContacts::has_n() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpContacts::set_has_n() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpContacts::clear_has_n() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpContacts::clear_n() {
  if (n_ != &::google::protobuf::internal::kEmptyString) {
    n_->clear();
  }
  clear_has_n();
}
inline const ::std::string& UpContacts::n() const {
  return *n_;
}
inline void UpContacts::set_n(const ::std::string& value) {
  set_has_n();
  if (n_ == &::google::protobuf::internal::kEmptyString) {
    n_ = new ::std::string;
  }
  n_->assign(value);
}
inline void UpContacts::set_n(const char* value) {
  set_has_n();
  if (n_ == &::google::protobuf::internal::kEmptyString) {
    n_ = new ::std::string;
  }
  n_->assign(value);
}
inline void UpContacts::set_n(const char* value, size_t size) {
  set_has_n();
  if (n_ == &::google::protobuf::internal::kEmptyString) {
    n_ = new ::std::string;
  }
  n_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpContacts::mutable_n() {
  set_has_n();
  if (n_ == &::google::protobuf::internal::kEmptyString) {
    n_ = new ::std::string;
  }
  return n_;
}
inline ::std::string* UpContacts::release_n() {
  clear_has_n();
  if (n_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = n_;
    n_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UpContacts::set_allocated_n(::std::string* n) {
  if (n_ != &::google::protobuf::internal::kEmptyString) {
    delete n_;
  }
  if (n) {
    set_has_n();
    n_ = n;
  } else {
    clear_has_n();
    n_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 t = 3;
inline bool UpContacts::has_t() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpContacts::set_has_t() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpContacts::clear_has_t() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpContacts::clear_t() {
  t_ = 0;
  clear_has_t();
}
inline ::google::protobuf::int32 UpContacts::t() const {
  return t_;
}
inline void UpContacts::set_t(::google::protobuf::int32 value) {
  set_has_t();
  t_ = value;
}

// repeated .com.mm.pb.po.Phone p = 4;
inline int UpContacts::p_size() const {
  return p_.size();
}
inline void UpContacts::clear_p() {
  p_.Clear();
}
inline const ::com::mm::pb::po::Phone& UpContacts::p(int index) const {
  return p_.Get(index);
}
inline ::com::mm::pb::po::Phone* UpContacts::mutable_p(int index) {
  return p_.Mutable(index);
}
inline ::com::mm::pb::po::Phone* UpContacts::add_p() {
  return p_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::Phone >&
UpContacts::p() const {
  return p_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::mm::pb::po::Phone >*
UpContacts::mutable_p() {
  return &p_;
}

// -------------------------------------------------------------------

// Phone

// optional int64 pn = 1;
inline bool Phone::has_pn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Phone::set_has_pn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Phone::clear_has_pn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Phone::clear_pn() {
  pn_ = GOOGLE_LONGLONG(0);
  clear_has_pn();
}
inline ::google::protobuf::int64 Phone::pn() const {
  return pn_;
}
inline void Phone::set_pn(::google::protobuf::int64 value) {
  set_has_pn();
  pn_ = value;
}

// optional int32 pt = 2;
inline bool Phone::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Phone::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Phone::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Phone::clear_pt() {
  pt_ = 0;
  clear_has_pt();
}
inline ::google::protobuf::int32 Phone::pt() const {
  return pt_;
}
inline void Phone::set_pt(::google::protobuf::int32 value) {
  set_has_pt();
  pt_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace po
}  // namespace pb
}  // namespace mm
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UpContactsParamsPOJO_2eproto__INCLUDED
