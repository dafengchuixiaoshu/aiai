# Copyright (c) 2010 - 2011, 2014, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 

Import('router_env', 'router_objs')

# Build the posix daemon and service launcher helper.
if router_env['OS'] != 'darwin':
    daemon = router_env.Program('alljoyn-daemon', ['daemon-main.cc'] + router_objs)
else:
    daemon = []
	
#
# On Android, build a static library that can be linked into a JNI dynamic 
# library to implement the daemon as a Service
#
if router_env['OS'] == 'android':
   libenv = router_env.Clone(CCFLAGS = '-DROUTER_LIB')
   libenv.Object(target = 'alljoyn-daemon', source = 'daemon-main.cc')
   libdaemon = libenv.StaticLibrary(['alljoyn-daemon'] + router_objs)
   dlibs = libenv.Install('$CPP_DISTDIR/lib', libdaemon)

#progs = daemon + servicehelper
progs = daemon
Return('progs')
